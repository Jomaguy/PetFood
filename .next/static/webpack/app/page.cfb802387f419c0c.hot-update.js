"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/errorHandling.ts":
/*!************************************!*\
  !*** ./src/utils/errorHandling.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageError: () => (/* binding */ StorageError),\n/* harmony export */   StorageErrorType: () => (/* binding */ StorageErrorType),\n/* harmony export */   handleStorageError: () => (/* binding */ handleStorageError),\n/* harmony export */   logStorageError: () => (/* binding */ logStorageError),\n/* harmony export */   registerStorageErrorHandler: () => (/* binding */ registerStorageErrorHandler),\n/* harmony export */   tryCatchStorage: () => (/* binding */ tryCatchStorage),\n/* harmony export */   unregisterStorageErrorHandler: () => (/* binding */ unregisterStorageErrorHandler)\n/* harmony export */ });\n/**\n * Utility functions for enhanced error handling and logging\n */ // Define different types of storage errors\nvar StorageErrorType = /*#__PURE__*/ function(StorageErrorType) {\n    StorageErrorType[\"STORAGE_UNAVAILABLE\"] = \"storage_unavailable\";\n    StorageErrorType[\"STORAGE_QUOTA_EXCEEDED\"] = \"storage_quota_exceeded\";\n    StorageErrorType[\"PARSE_ERROR\"] = \"parse_error\";\n    StorageErrorType[\"WRITE_ERROR\"] = \"write_error\";\n    StorageErrorType[\"READ_ERROR\"] = \"read_error\";\n    StorageErrorType[\"VERSION_MISMATCH\"] = \"version_mismatch\";\n    StorageErrorType[\"BACKUP_ERROR\"] = \"backup_error\";\n    StorageErrorType[\"RESTORE_ERROR\"] = \"restore_error\";\n    StorageErrorType[\"EXPORT_ERROR\"] = \"export_error\";\n    StorageErrorType[\"IMPORT_ERROR\"] = \"import_error\";\n    StorageErrorType[\"CLEANUP_ERROR\"] = \"cleanup_error\";\n    StorageErrorType[\"UNKNOWN_ERROR\"] = \"unknown_error\";\n    return StorageErrorType;\n}({});\n// Custom storage error class\nclass StorageError extends Error {\n    // Get human-readable error message\n    getUserFriendlyMessage() {\n        switch(this.type){\n            case \"storage_unavailable\":\n                return 'Local storage is not available in your browser. Please enable cookies and local storage in your browser settings.';\n            case \"storage_quota_exceeded\":\n                return 'Storage space is full. Please delete some data or export your data as a backup.';\n            case \"parse_error\":\n                return 'Could not read stored data due to a format error. Your data might be corrupted.';\n            case \"write_error\":\n                return 'Failed to save data to storage. Please check your browser settings.';\n            case \"read_error\":\n                return 'Failed to read data from storage. Please check your browser settings.';\n            case \"version_mismatch\":\n                return 'The data format has changed since your last visit. Some data may need to be migrated.';\n            case \"backup_error\":\n                return 'Failed to create a backup of your data.';\n            case \"restore_error\":\n                return 'Failed to restore data from backup. The backup might be corrupted or missing.';\n            case \"export_error\":\n                return 'Failed to export data. Please try again later.';\n            case \"import_error\":\n                return 'Failed to import data. The file might be corrupted or in an invalid format.';\n            default:\n                return this.message || 'An unknown error occurred while accessing storage.';\n        }\n    }\n    constructor(message, type = \"unknown_error\", details){\n        super(message);\n        this.name = 'StorageError';\n        this.type = type;\n        this.details = details;\n        this.timestamp = new Date();\n        // Ensure proper prototype chain for instanceof checks\n        Object.setPrototypeOf(this, StorageError.prototype);\n    }\n}\n// Error handler for storage operations\nfunction handleStorageError(error, operation, errorType) {\n    // Map the error to a StorageError type\n    let storageError;\n    if (error instanceof StorageError) {\n        // Already a StorageError, just return it\n        return error;\n    } else if (error instanceof Error) {\n        // Convert standard Error to StorageError\n        const type = errorType || determineErrorType(error, operation);\n        storageError = new StorageError(error.message || \"Error during \".concat(operation), type, {\n            originalError: error,\n            stack: error.stack\n        });\n    } else {\n        // Handle non-Error objects\n        storageError = new StorageError(String(error) || \"Unknown error during \".concat(operation), errorType || \"unknown_error\", {\n            originalError: error\n        });\n    }\n    // Log the error for debugging\n    logStorageError(storageError, operation);\n    return storageError;\n}\n// Determine error type from error message or stack trace\nfunction determineErrorType(error, operation) {\n    var _error_stack;\n    const errorMsg = error.message.toLowerCase();\n    const errorStack = ((_error_stack = error.stack) === null || _error_stack === void 0 ? void 0 : _error_stack.toLowerCase()) || '';\n    if (errorMsg.includes('quota') || errorMsg.includes('exceed') || errorMsg.includes('full')) {\n        return \"storage_quota_exceeded\";\n    } else if (errorMsg.includes('parse') || errorMsg.includes('json') || errorMsg.includes('format')) {\n        return \"parse_error\";\n    } else if (!window.localStorage || operation.includes('unavailable')) {\n        return \"storage_unavailable\";\n    } else if (operation.includes('write') || operation.includes('save')) {\n        return \"write_error\";\n    } else if (operation.includes('read') || operation.includes('load')) {\n        return \"read_error\";\n    } else if (operation.includes('version') || operation.includes('migration')) {\n        return \"version_mismatch\";\n    } else if (operation.includes('backup')) {\n        return \"backup_error\";\n    } else if (operation.includes('restore')) {\n        return \"restore_error\";\n    } else if (operation.includes('export')) {\n        return \"export_error\";\n    } else if (operation.includes('import')) {\n        return \"import_error\";\n    }\n    return \"unknown_error\";\n}\n// Enhanced error logging function\nfunction logStorageError(error, operation) {\n    console.group(\"Storage Error: \".concat(operation));\n    console.error(\"[\".concat(error.timestamp.toISOString(), \"] \").concat(error.name, \": \").concat(error.message));\n    console.error(\"Type: \".concat(error.type));\n    console.error(\"User friendly message: \".concat(error.getUserFriendlyMessage()));\n    if (error.details) {\n        console.error('Details:', error.details);\n    }\n    if (error.stack) {\n        console.error('Stack:', error.stack);\n    }\n    console.groupEnd();\n// In a production app, you might want to send this to a logging service\n// logToService(error, operation);\n}\n// Find the global StorageErrorContext if available\nlet globalSetStorageError = null;\n/**\n * Register a function to set global storage errors\n * This should be called by the StorageErrorProvider during initialization\n */ function registerStorageErrorHandler(handler) {\n    globalSetStorageError = handler;\n}\n/**\n * Unregister the global error handler\n */ function unregisterStorageErrorHandler() {\n    globalSetStorageError = null;\n}\n// Try-catch wrapper for storage operations\nfunction tryCatchStorage(operation, operationName, errorType, options) {\n    try {\n        const result = operation();\n        return {\n            result,\n            error: null\n        };\n    } catch (err) {\n        const error = handleStorageError(err, operationName, errorType);\n        // Check if this is a critical error that should be shown to the user\n        const isCritical = error.type === \"storage_unavailable\" || error.type === \"storage_quota_exceeded\";\n        // Only log critical errors if requested\n        if (!(options === null || options === void 0 ? void 0 : options.logOnlyCritical) || isCritical) {\n            logStorageError(error, operationName);\n        }\n        // Notify global error handler if available and notification is not suppressed\n        if (globalSetStorageError && !(options === null || options === void 0 ? void 0 : options.suppressNotification)) {\n            globalSetStorageError(error);\n        }\n        return {\n            result: null,\n            error\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/errorHandling.ts\n"));

/***/ })

});